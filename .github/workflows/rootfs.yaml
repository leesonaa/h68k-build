name: Build rootfs

on:
  workflow_dispatch:
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  CONFIG_FILE: immortal-rootfs.config
  TZ: Asia/Shanghai
  DEVICE: hinlink_h68k
  SOURCE_REPO: immortalwrt-24.10


jobs:
  build:
    name: Build rootfs
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout current repo
      uses: actions/checkout@main
      
    - name: Init Env
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        sudo timedatectl set-timezone "$TZ"
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt update && sudo apt install -y \
        duf ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
        libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
        libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
        ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
        python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
        upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd clang-15 llvm-15 npm
    
    - name: Clone source code
      run: |
        duf
        sudo -E chmod -R 777 /mnt
        git clone $REPO_URL /mnt/openwrt
        cd /mnt/openwrt
        git checkout v24.10.1
        
    - name: Update feeds
      run: cd /mnt/openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd /mnt/openwrt && ./scripts/feeds install -a

    - name: Clone luci-app-argon
      run: |
           cd /mnt/openwrt
           rm -rf package/feeds/luci/luci-app-argon-config
           rm -rf package/feeds/luci/luci-theme-argon
           git clone https://github.com/jerrykuku/luci-theme-argon.git package/feeds/luci/luci-theme-argon
           git clone https://github.com/jerrykuku/luci-app-argon-config.git package/feeds/luci-app-argon-config
        
    - name: Make menuconfig
      run: |
           [ -e $CONFIG_FILE ] && cp $CONFIG_FILE /mnt/openwrt/.config
           cd /mnt/openwrt
           make defconfig
    
    - name: Check and Push config
      run: |
        [ -e $CONFIG_FILE ] && cp /mnt/openwrt/.config $CONFIG_FILE
        if [ -n "$(git status -s | grep $CONFIG_FILE)" ]; then
          git add $CONFIG_FILE
          git commit -m "update config"
          git push -f
        fi
  
    - name: Compile the firmware
      run: |
        cd /mnt/openwrt
        echo -e "download package"
        make download -j$(nproc)
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s
        echo "release=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
    
    - name: Check space usage
      if: (!cancelled())
      run: |
        duf

    - name: Organize files
      if: (!cancelled())
      run: |
        cd /mnt/openwrt/bin/targets/*/*
        ls -l
        echo "firmware_dir=$PWD" >> $GITHUB_ENV

    - name: Upload firmware to GitHub Actions Artifacts
      uses: actions/upload-artifact@main
      if: (!cancelled())
      with:
        name: firmware-${{ env.release }}-${{ env.DEVICE }}-${{ env.SOURCE_REPO }}
        path: ${{ env.firmware_dir }}/*
    
